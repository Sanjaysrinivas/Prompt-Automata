"""Add FenceReference model and path validation

Revision ID: 4e8d1ea42c8a
Revises: 7a5afde255a5
Create Date: 2024-11-29 01:02:37.297306

"""

from __future__ import annotations

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = "4e8d1ea42c8a"
down_revision = "7a5afde255a5"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("api_endpoints")
    op.drop_table("allowed_directories")
    with op.batch_alter_table("fence_references", schema=None) as batch_op:
        batch_op.add_column(sa.Column("error_message", sa.Text(), nullable=True))
        batch_op.add_column(sa.Column("reference_metadata", sa.JSON(), nullable=True))
        batch_op.alter_column(
            "reference_type",
            existing_type=sa.VARCHAR(length=50),
            type_=sa.Enum("FILE", "VARIABLE", "API", name="referencetype"),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "reference_value",
            existing_type=sa.VARCHAR(length=1024),
            type_=sa.String(length=500),
            existing_nullable=False,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("fence_references", schema=None) as batch_op:
        batch_op.alter_column(
            "reference_value",
            existing_type=sa.String(length=500),
            type_=sa.VARCHAR(length=1024),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "reference_type",
            existing_type=sa.Enum("FILE", "VARIABLE", "API", name="referencetype"),
            type_=sa.VARCHAR(length=50),
            existing_nullable=False,
        )
        batch_op.drop_column("reference_metadata")
        batch_op.drop_column("error_message")

    op.create_table(
        "allowed_directories",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("path", sa.VARCHAR(length=1024), nullable=False),
        sa.Column(
            "created_at",
            sa.DATETIME(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DATETIME(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column("is_recursive", sa.BOOLEAN(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("path"),
    )
    op.create_table(
        "api_endpoints",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), nullable=False),
        sa.Column("headers", sqlite.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DATETIME(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DATETIME(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("base_url", sa.VARCHAR(length=1024), nullable=False),
        sa.Column("auth_type", sa.VARCHAR(length=50), nullable=True),
        sa.Column("auth_token", sa.VARCHAR(length=500), nullable=True),
        sa.Column("rate_limit", sa.INTEGER(), nullable=True),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    # ### end Alembic commands ###
