"""Update APIEndpoint schema with new fields

Revision ID: 040911525030
Revises: a1a9de0b0fbd
Create Date: 2024-11-29 00:30:38.251287

"""

from __future__ import annotations

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = "040911525030"
down_revision = "a1a9de0b0fbd"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("allowed_directory")
    op.drop_table("fence_reference")
    op.drop_table("api_endpoint")
    op.drop_table("persistent_variable")
    with op.batch_alter_table("api_endpoints", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("base_url", sa.String(length=1024), nullable=False)
        )
        batch_op.add_column(sa.Column("auth_type", sa.String(length=50), nullable=True))
        batch_op.add_column(
            sa.Column("auth_token", sa.String(length=500), nullable=True)
        )
        batch_op.add_column(sa.Column("rate_limit", sa.Integer(), nullable=True))
        batch_op.drop_column("url")
        batch_op.drop_column("method")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("api_endpoints", schema=None) as batch_op:
        batch_op.add_column(sa.Column("method", sa.VARCHAR(length=10), nullable=False))
        batch_op.add_column(sa.Column("url", sa.VARCHAR(length=1024), nullable=False))
        batch_op.drop_column("rate_limit")
        batch_op.drop_column("auth_token")
        batch_op.drop_column("auth_type")
        batch_op.drop_column("base_url")

    op.create_table(
        "persistent_variable",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), nullable=False),
        sa.Column("value", sa.TEXT(), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "api_endpoint",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), nullable=False),
        sa.Column("base_url", sa.VARCHAR(length=500), nullable=False),
        sa.Column("auth_type", sa.VARCHAR(length=50), nullable=True),
        sa.Column("auth_token", sa.VARCHAR(length=500), nullable=True),
        sa.Column("headers", sqlite.JSON(), nullable=True),
        sa.Column("rate_limit", sa.INTEGER(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "fence_reference",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("fence_id", sa.INTEGER(), nullable=False),
        sa.Column("reference_type", sa.VARCHAR(length=50), nullable=False),
        sa.Column("reference_value", sa.VARCHAR(length=500), nullable=False),
        sa.Column("last_resolved", sa.DATETIME(), nullable=True),
        sa.Column("resolution_status", sa.VARCHAR(length=50), nullable=True),
        sa.Column("error_message", sa.TEXT(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.Column("updated_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(["fence_id"], ["fence.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "allowed_directory",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("path", sa.VARCHAR(length=500), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column("is_recursive", sa.BOOLEAN(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("path"),
    )
    # ### end Alembic commands ###
